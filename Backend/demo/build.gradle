plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '32.1.2-jre'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5' // Jackson을 사용할 경우, Gson을 사용할 경우 'jjwt-gson'을 사용
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
	useJUnitPlatform()
}

task('release') {
	dependsOn("build")

	doLast{
		def stdout = new ByteArrayOutputStream()

		exec {
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}

		println "eb setenv SPRING_PROFILES_ACTIVE=prod :\n$stdout";

		exec {
			commandLine 'eb', 'deploy'
			standardOutput stdout
		}

		println "eb deploy :\n$stdout";
		println "Release succeeded."
	}
}